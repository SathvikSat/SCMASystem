% Transmitter: Performs data processing operations like power allocation,
%              channel coding, qam modulation, etc. at the Transmitter End
% Input: data, txParams
%        data           - A matrix containing information of multiple user
%                         where each user is assigned one column.
%        txParams       - A structure containing system parameters like
%                         number of users, code rate, qam alphabet etc.
%
% Output: modDataStream - A column vector containing qam modulated information of
%                         the user data (after additional processing like
%                         channel coding, scrambling, etc).
%

function modDataStream = Transmitter(data, txParams)  
    %% Channel Coding
    
    % Allocating buffer for encoding
    encodedData = zeros(length(data) / (txParams.coding.codeRate * txParams.symLen), txParams.numUsers);
    
    for iter_user = 1:txParams.numUsers
        tmpVar = channelEncoding(data(:, iter_user), txParams);
        tmpVar = vec2mat(tmpVar, txParams.symLen);
        encodedData(:, iter_user) = bi2de(tmpVar, 'left-msb');
    end
    
    %% Codebook Mapping
    
    modDataMat = zeros(txParams.wordLen * size(encodedData, 1), txParams.numUsers);
    
    for iter_user = 1:txParams.numUsers
        tmpVar = txParams.codeBook(:, encodedData(:, iter_user) + 1, iter_user);
        modDataMat(:, iter_user) = ;
        modDataStream = modDataStream + modDataMat(:, iter_user);
    end
    
end